spring.data.mongodb.uri=mongodb+srv://daniel:Dds9cP4zlMMIEgGQ@ejercicio-final.szos9we.mongodb.net/?retryWrites=true&w=majority
spring.data.mongodb.database=Back-Web
spring.output.ansi.enabled=always
spring.application.name=back-web
eureka.client.serviceUrl.defaultZone= ${EUREKA_HOST:http://localhost:8761/eureka}
server.port=8001
eureka.instance.lease-renewal-interval-in-seconds=0
#spring.kafka.consumer.bootstrap-servers=localhost:9092
#spring.kafka.producer.bootstrap-servers=localhost:9092

spring.kafka.consumer.bootstrap-servers=${KAFKA_CONSUMER_HOST:http://localhost:9092}
spring.kafka.producer.bootstrap-servers=${KAFKA_PRODUCER_HOST:http://localhost:9092}


spring.kafka.consumer.groupid=myGroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.properties.spring.json.type.mapping=KafkaItemReservas:com.bosonit.domain.no_collection.KafkaItemReservas

spring.main.web-application-type=reactive
spring.cloud.gateway.discovery.locator.enabled=true
eureka.instance.instance-id=${spring.application.name}:${random.uuid}
spring.cloud.loadbalancer.ribbon.enabled=false

spring.cloud.gateway.routes[0].id=back-web
spring.cloud.gateway.routes[0].uri=lb://BACK-WEB
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v0/reserva/**, /api/v0/disponible/**

spring.main.allow-bean-definition-overriding=true