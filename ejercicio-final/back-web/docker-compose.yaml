version: "3.3"
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - mynetwork

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
#      - 9092:9092
      - 29092:29092
    networks:
      - mynetwork
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  back-web-8001:
    container_name: back-web-8001
    build: .
    ports:
#      - 8000:8000
      - 8001:8001
    networks:
      - mynetwork
    environment:
      EUREKA_HOST: http://eureka:8761/eureka
      KAFKA_CONSUMER_HOST: http://kafka:9092
      KAFKA_PRODUCER_HOST: http://kafka:9092

  mongo:
    container_name: mongodb
    image: mongo
    ports:
      - 9000:27017
    networks:
      - mynetwork
    environment:
      - MONGO_INITDB_ROOT_USERNAME=daniel
      - MONGO_INITDB_ROOT_PASSWORD=Dds9cP4zlMMIEgGQ
    volumes:
      - mongo-data:/data/db

volumes:
  mongo-data:
networks:
  mynetwork:
    external: true
#volumes:
#  zk-data:
#  zk-txn-logs:
#  kafka-data:

